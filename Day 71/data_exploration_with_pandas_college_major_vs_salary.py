# -*- coding: utf-8 -*-
"""Data Exploration with Pandas - College Major vs Salary.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uflz2cjftb4X4ssgnoEsiADlKurRocYc
"""

import pandas as pd
df = pd.read_csv('salaries_by_college_major.csv')

df.head() # check first 5 entries

df.columns # check all the column headings

df.isna() # check if there are any NaN values before doing operations on the table to avoid processing junk or bad data

# the last row is null, so we can check it out 
df.tail()

# it contains information on the source of the data, we don't need that, so let's get rid of it 
df = df.dropna()  # this removes all NaN rows from the table
df.tail() # check if it worked

# Find college major with highest starting median salary

starting_max_index = df['Starting Median Salary'].idxmax()
highest_starting_major_name = df['Undergraduate Major'][starting_max_index]  # can get just the name by specifying the column, can skip using .loc[] and use double square brackets
highest_starting_major_all_data = df.loc[starting_max_index]  # can also get all data, but use .loc[index] to avoid getting a KeyError 43

highest_starting_major_all_data

# Find college major with highest mid-career salary

mid_career_max_index = df['Mid-Career 90th Percentile Salary'].idxmax()
print(f"The highest mid-career earning major is {df['Undergraduate Major'][mid_career_max_index]}, with a 90th percentile salary of ${df['Mid-Career 90th Percentile Salary'][mid_career_max_index]}0")

# Find college major with lowest starting salary

starting_min_index = df['Starting Median Salary'].idxmin()
print(f"The lowest starting salary earning major is {df['Undergraduate Major'][starting_min_index]}, with a median salary of ${df['Starting Median Salary'][starting_min_index]}0")

# Find college major with lowest mid-career salary

mid_career_min_index = df['Mid-Career 10th Percentile Salary'].idxmin()
print(f"The lowest mid-career earning major is {df['Undergraduate Major'][mid_career_min_index]}, with a 10th percentile salary of ${df['Mid-Career 10th Percentile Salary'][mid_career_min_index]}0")

# Create a column showing the difference between the lowest and highest mid career salaries for a major in order to find the lowest risk major

mid_career_spread_col = df['Mid-Career 90th Percentile Salary'] - df['Mid-Career 10th Percentile Salary']
# the below code only needs to be run once if you are using ipynb
df.insert(5, 'Mid-Career Salary Spread', mid_career_spread_col)
df.head()

# Find the 5 lowest risk majors

low_risk = df.sort_values("Mid-Career Salary Spread").head()
low_risk

# Find the 5 highest risk majors

high_risk = df.sort_values("Mid-Career Salary Spread", ascending=False).head()
high_risk

# Find highest average median salary by group

pd.options.display.float_format = '{:,.2f}'.format # display numbers in the table to 2 decimal places for readability
df.groupby('Group').mean() # gets the mean of every column after grouping it by the "Group" column

